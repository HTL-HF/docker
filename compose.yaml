version: '3.9'

networks:
  mynetwork:
    driver: bridge

services:
  # MongoDB service
  mongo:
    image: mongo:6.0
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME_ARG}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD_ARG}
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db
    networks:
      - mynetwork

  # Backend service
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        LOGGER_LEVEL_ARG: ${LOGGER_LEVEL_ARG}
        DB_IP_ARG: mongodb
        DB_NAME_ARG: ${DB_NAME_ARG}
        PORT_ARG: ${BACKEND_PORT_ARG}
        FRONTEND_IP_ARG: ${FRONTEND_IP_ARG}
        FRONTEND_PORT_ARG: ${FRONTEND_PORT_ARG}
        JWT_SECRET_KEY_ARG: ${JWT_SECRET_KEY_ARG}
    tty: true
    ports:
      - "${BACKEND_PORT_ARG}:${BACKEND_PORT_ARG}"
    depends_on:
      - mongo
    networks:
      - mynetwork

  # Frontend service
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        PORT_ARG: ${FRONTEND_PORT_ARG}
        BACKEND_IP_ARG: ${BACKEND_IP_ARG}
        BACKEND_PORT_ARG: ${BACKEND_PORT_ARG}
    tty: true
    ports:
      - "${FRONTEND_PORT_ARG}:${FRONTEND_PORT_ARG}"
    networks:
      - mynetwork


  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes: 
      - ./nginx:/etc/nginx/conf.d/
    networks:
      - mynetwork



volumes:
  mongo_data:
